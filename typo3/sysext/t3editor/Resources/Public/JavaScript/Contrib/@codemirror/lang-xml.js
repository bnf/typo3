import{parser}from"@lezer/xml";import{syntaxTree,LRLanguage,indentNodeProp,foldNodeProp,LanguageSupport}from"@codemirror/language";import{styleTags,tags}from"@codemirror/highlight";function tagName(e,t){let n=t&&t.getChild("TagName");return n?e.sliceString(n.from,n.to):""}function elementName(e,t){let n=t&&t.firstChild;return n&&"OpenTag"==n.name?tagName(e,n):""}function attrName(e,t,n){let a=t&&t.getChildren("Attribute").find(e=>e.from<=n&&e.to>=n),o=a&&a.getChild("AttributeName");return o?e.sliceString(o.from,o.to):""}function findParentElement(e){for(let t=e&&e.parent;t;t=t.parent)if("Element"==t.name)return t;return null}function findLocation(e,t){var n;let a=syntaxTree(e).resolveInner(t,-1),o=null;for(let e=a;!o&&e.parent;e=e.parent)"OpenTag"!=e.name&&"CloseTag"!=e.name&&"SelfClosingTag"!=e.name&&"MismatchedCloseTag"!=e.name||(o=e);if(o&&(o.to>t||o.lastChild.type.isError)){let e=o.parent;if("TagName"==a.name)return"CloseTag"==o.name||"MismatchedCloseTag"==o.name?{type:"closeTag",from:a.from,context:e}:{type:"openTag",from:a.from,context:findParentElement(e)};if("AttributeName"==a.name)return{type:"attrName",from:a.from,context:o};if("AttributeValue"==a.name)return{type:"attrValue",from:a.from,context:o};let n=a==o||"Attribute"==a.name?a.childBefore(t):a;return"StartTag"==(null==n?void 0:n.name)?{type:"openTag",from:t,context:findParentElement(e)}:"StartCloseTag"==(null==n?void 0:n.name)&&n.to<=t?{type:"closeTag",from:t,context:e}:"Is"==(null==n?void 0:n.name)?{type:"attrValue",from:t,context:o}:n?{type:"attrName",from:t,context:o}:null}if("StartCloseTag"==a.name)return{type:"closeTag",from:t,context:a.parent};for(;a.parent&&a.to==t&&!(null===(n=a.lastChild)||void 0===n?void 0:n.type.isError);)a=a.parent;return"Element"==a.name||"Text"==a.name||"Document"==a.name?{type:"tag",from:t,context:"Element"==a.name?a:findParentElement(a)}:null}class Element{constructor(e,t,n){this.attrs=t,this.attrValues=n,this.children=[],this.name=e.name,this.completion=Object.assign(Object.assign({type:"type"},e.completion||{}),{label:this.name}),this.openCompletion=Object.assign(Object.assign({},this.completion),{label:"<"+this.name}),this.closeCompletion=Object.assign(Object.assign({},this.completion),{label:"</"+this.name+">",boost:2}),this.closeNameCompletion=Object.assign(Object.assign({},this.completion),{label:this.name+">"}),this.text=e.textContent?e.textContent.map(e=>({label:e,type:"text"})):[]}}const Identifier=/^[:\-\.\w\u00b7-\uffff]*$/;function attrCompletion(e){return Object.assign(Object.assign({type:"property"},e.completion||{}),{label:e.name})}function valueCompletion(e){return"string"==typeof e?{label:`"${e}"`,type:"constant"}:/^"/.test(e.label)?e:Object.assign(Object.assign({},e),{label:`"${e.label}"`})}function completeFromSchema(e,t){let n=[],a=[],o=Object.create(null);for(let e of t){let t=attrCompletion(e);n.push(t),e.global&&a.push(t),e.values&&(o[e.name]=e.values.map(valueCompletion))}let l=[],r=[],i=Object.create(null);for(let t of e){let e=a,s=o;t.attributes&&(e=e.concat(t.attributes.map(e=>"string"==typeof e?n.find(t=>t.label==e)||{label:e,type:"property"}:(e.values&&(s==o&&(s=Object.create(s)),s[e.name]=e.values.map(valueCompletion)),attrCompletion(e)))));let m=new Element(t,e,s);i[m.name]=m,l.push(m),t.top&&r.push(m)}r.length||(r=l);for(let t=0;t<l.length;t++){let n=e[t],a=l[t];if(n.children)for(let e of n.children)i[e]&&a.children.push(i[e]);else a.children=l}return e=>{var t;let{doc:n}=e.state,s=findLocation(e.state,e.pos);if(!s||"tag"==s.type&&!e.explicit)return null;let{type:m,from:p,context:c}=s;if("openTag"==m){let e=r,t=elementName(n,c);if(t){let n=i[t];e=(null==n?void 0:n.children)||l}return{from:p,options:e.map(e=>e.completion),span:Identifier}}if("closeTag"==m){let a=elementName(n,c);return a?{from:p,to:e.pos+(">"==n.sliceString(e.pos,e.pos+1)?1:0),options:[(null===(t=i[a])||void 0===t?void 0:t.closeNameCompletion)||{label:a+">",type:"type"}],span:Identifier}:null}if("attrName"==m){let e=i[tagName(n,c)];return{from:p,options:(null==e?void 0:e.attrs)||a,span:Identifier}}if("attrValue"==m){let t=attrName(n,c,p);if(!t)return null;let a=i[tagName(n,c)],l=((null==a?void 0:a.attrValues)||o)[t];return l&&l.length?{from:p,to:e.pos+('"'==n.sliceString(e.pos,e.pos+1)?1:0),options:l,span:/^"[^"]*"?$/}:null}if("tag"==m){let t=elementName(n,c),a=i[t],o=[],s=c&&c.lastChild;!t||s&&"CloseTag"==s.name&&tagName(n,s)==t||o.push(a?a.closeCompletion:{label:"</"+t+">",type:"type",boost:2});let m=o.concat(((null==a?void 0:a.children)||(c?l:r)).map(e=>e.openCompletion));if(c&&(null==a?void 0:a.text.length)){let t=c.firstChild;t.to>e.pos-20&&!/\S/.test(e.state.sliceDoc(t.to,e.pos))&&(m=m.concat(a.text))}return{from:p,options:m,span:/^<\/?[:\-\.\w\u00b7-\uffff]*$/}}return null}}const xmlLanguage=LRLanguage.define({parser:parser.configure({props:[indentNodeProp.add({Element(e){let t=/^\s*<\//.test(e.textAfter);return e.lineIndent(e.node.from)+(t?0:e.unit)},"OpenTag CloseTag SelfClosingTag":e=>e.column(e.node.from)+e.unit}),foldNodeProp.add({Element(e){let t=e.firstChild,n=e.lastChild;return t&&"OpenTag"==t.name?{from:t.to,to:"CloseTag"==n.name?n.from:e.to}:null}}),styleTags({Text:tags.content,"StartTag StartCloseTag EndTag SelfCloseEndTag":tags.angleBracket,TagName:tags.tagName,"MismatchedCloseTag/Tagname":[tags.tagName,tags.invalid],AttributeName:tags.attributeName,AttributeValue:tags.attributeValue,Is:tags.definitionOperator,"EntityReference CharacterReference":tags.character,Comment:tags.blockComment,ProcessingInst:tags.processingInstruction,DoctypeDecl:tags.documentMeta,Cdata:tags.special(tags.string)})]}),languageData:{commentTokens:{block:{open:"\x3c!--",close:"--\x3e"}},indentOnInput:/^\s*<\/$/}});function xml(e={}){return new LanguageSupport(xmlLanguage,xmlLanguage.data.of({autocomplete:completeFromSchema(e.elements||[],e.attributes||[])}))}export{completeFromSchema,xml,xmlLanguage};