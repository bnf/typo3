import{EditorSelection}from"@codemirror/state";const toggleComment=e=>{let n=getConfig(e.state);return n.line?toggleLineComment(e):!!n.block&&toggleBlockComment(e)};function command(e,n){return({state:t,dispatch:o})=>{let l=e(n,t.selection.ranges,t);return!!l&&(o(t.update(l)),!0)}}const toggleLineComment=command(changeLineComment,0),lineComment=command(changeLineComment,1),lineUncomment=command(changeLineComment,2),toggleBlockComment=command(changeBlockComment,0),blockComment=command(changeBlockComment,1),blockUncomment=command(changeBlockComment,2),commentKeymap=[{key:"Mod-/",run:toggleComment},{key:"Alt-A",run:toggleBlockComment}];function getConfig(e,n=e.selection.main.head){let t=e.languageDataAt("commentTokens",n);return t.length?t[0]:{}}const SearchMargin=50;function findBlockComment(e,{open:n,close:t},o,l){let m,c,g=e.sliceDoc(o-50,o),i=e.sliceDoc(l,l+50),r=/\s*$/.exec(g)[0].length,s=/^\s*/.exec(i)[0].length,a=g.length-r;if(g.slice(a-n.length,a)==n&&i.slice(s,s+t.length)==t)return{open:{pos:o-r,margin:r&&1},close:{pos:l+s,margin:s&&1}};l-o<=100?m=c=e.sliceDoc(o,l):(m=e.sliceDoc(o,o+50),c=e.sliceDoc(l-50,l));let h=/^\s*/.exec(m)[0].length,f=/\s*$/.exec(c)[0].length,u=c.length-f-t.length;return m.slice(h,h+n.length)==n&&c.slice(u,u+t.length)==t?{open:{pos:o+h+n.length,margin:/\s/.test(m.charAt(h+n.length))?1:0},close:{pos:l-f-t.length,margin:/\s/.test(c.charAt(u-1))?1:0}}:null}function changeBlockComment(e,n,t){let o=n.map(e=>getConfig(t,e.from).block);if(!o.every(e=>e))return null;let l=n.map((e,n)=>findBlockComment(t,o[n],e.from,e.to));if(2!=e&&!l.every(e=>e)){let e=0;return t.changeByRange(n=>{let{open:t,close:m}=o[e++];if(l[e])return{range:n};let c=t.length+1;return{changes:[{from:n.from,insert:t+" "},{from:n.to,insert:" "+m}],range:EditorSelection.range(n.anchor+c,n.head+c)}})}if(1!=e&&l.some(e=>e)){let e=[];for(let n,t=0;t<l.length;t++)if(n=l[t]){let l=o[t],{open:m,close:c}=n;e.push({from:m.pos-l.open.length,to:m.pos+m.margin},{from:c.pos-c.margin,to:c.pos+l.close.length})}return{changes:e}}return null}function changeLineComment(e,n,t){let o=[],l=-1;for(let{from:e,to:m}of n){let n=o.length,c=1e9;for(let n=e;n<=m;){let g=t.doc.lineAt(n);if(g.from>l&&(e==m||m>g.from)){l=g.from;let e=getConfig(t,n).line;if(!e)continue;let m=/^\s*/.exec(g.text)[0].length,i=m==g.length,r=g.text.slice(m,m+e.length)==e?m:-1;m<g.text.length&&m<c&&(c=m),o.push({line:g,comment:r,token:e,indent:m,empty:i,single:!1})}n=g.to+1}if(c<1e9)for(let e=n;e<o.length;e++)o[e].indent<o[e].line.text.length&&(o[e].indent=c);o.length==n+1&&(o[n].single=!0)}if(2!=e&&o.some(e=>e.comment<0&&(!e.empty||e.single))){let e=[];for(let{line:n,token:t,indent:l,empty:m,single:c}of o)!c&&m||e.push({from:n.from+l,insert:t+" "});let n=t.changes(e);return{changes:n,selection:t.selection.map(n,1)}}if(1!=e&&o.some(e=>e.comment>=0)){let e=[];for(let{line:n,comment:t,token:l}of o)if(t>=0){let o=n.from+t,m=o+l.length;" "==n.text[m-n.from]&&m++,e.push({from:o,to:m})}return{changes:e}}return null}export{blockComment,blockUncomment,commentKeymap,lineComment,lineUncomment,toggleBlockComment,toggleComment,toggleLineComment};