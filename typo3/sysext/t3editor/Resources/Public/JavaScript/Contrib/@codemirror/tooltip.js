import{ViewPlugin,Direction,EditorView,logException}from"@codemirror/view";import{Facet,StateEffect,StateField,MapMode}from"@codemirror/state";const ios="undefined"!=typeof navigator&&!/Edge\/(\d+)/.exec(navigator.userAgent)&&/Apple Computer/.test(navigator.vendor)&&(/Mobile\/\w+/.test(navigator.userAgent)||navigator.maxTouchPoints>2),Outside="-10000px";class TooltipViewManager{constructor(t,e,o){this.facet=e,this.createTooltipView=o,this.input=t.state.facet(e),this.tooltips=this.input.filter(t=>t),this.tooltipViews=this.tooltips.map(o)}update(t){let e=t.state.facet(this.facet),o=e.filter(t=>t);if(e===this.input){for(let e of this.tooltipViews)e.update&&e.update(t);return!1}let i=[];for(let e=0;e<o.length;e++){let s=o[e],r=-1;if(s){for(let t=0;t<this.tooltips.length;t++){let e=this.tooltips[t];e&&e.create==s.create&&(r=t)}if(r<0)i[e]=this.createTooltipView(s);else{let o=i[e]=this.tooltipViews[r];o.update&&o.update(t)}}}for(let t of this.tooltipViews)i.indexOf(t)<0&&t.dom.remove();return this.input=e,this.tooltips=o,this.tooltipViews=i,!0}}function tooltips(t={}){return tooltipConfig.of(t)}function windowSpace(){return{top:0,left:0,bottom:innerHeight,right:innerWidth}}const tooltipConfig=Facet.define({combine:t=>{var e,o,i;return{position:ios?"absolute":(null===(e=t.find(t=>t.position))||void 0===e?void 0:e.position)||"fixed",parent:(null===(o=t.find(t=>t.parent))||void 0===o?void 0:o.parent)||null,tooltipSpace:(null===(i=t.find(t=>t.tooltipSpace))||void 0===i?void 0:i.tooltipSpace)||windowSpace}}}),tooltipPlugin=ViewPlugin.fromClass(class{constructor(t){var e;this.view=t,this.inView=!0,this.lastTransaction=0,this.measureTimeout=-1;let o=t.state.facet(tooltipConfig);this.position=o.position,this.parent=o.parent,this.classes=t.themeClasses,this.createContainer(),this.measureReq={read:this.readMeasure.bind(this),write:this.writeMeasure.bind(this),key:this},this.manager=new TooltipViewManager(t,showTooltip,t=>this.createTooltip(t)),this.intersectionObserver="function"==typeof IntersectionObserver?new IntersectionObserver(t=>{Date.now()>this.lastTransaction-50&&t.length>0&&t[t.length-1].intersectionRatio<1&&this.measureSoon()},{threshold:[1]}):null,this.observeIntersection(),null===(e=t.dom.ownerDocument.defaultView)||void 0===e||e.addEventListener("resize",this.measureSoon=this.measureSoon.bind(this)),this.maybeMeasure()}createContainer(){this.parent?(this.container=document.createElement("div"),this.container.style.position="relative",this.container.className=this.view.themeClasses,this.parent.appendChild(this.container)):this.container=this.view.dom}observeIntersection(){if(this.intersectionObserver){this.intersectionObserver.disconnect();for(let t of this.manager.tooltipViews)this.intersectionObserver.observe(t.dom)}}measureSoon(){this.measureTimeout<0&&(this.measureTimeout=setTimeout(()=>{this.measureTimeout=-1,this.maybeMeasure()},50))}update(t){t.transactions.length&&(this.lastTransaction=Date.now());let e=this.manager.update(t);e&&this.observeIntersection();let o=e||t.geometryChanged,i=t.state.facet(tooltipConfig);if(i.position!=this.position){this.position=i.position;for(let t of this.manager.tooltipViews)t.dom.style.position=this.position;o=!0}if(i.parent!=this.parent){this.parent&&this.container.remove(),this.parent=i.parent,this.createContainer();for(let t of this.manager.tooltipViews)this.container.appendChild(t.dom);o=!0}else this.parent&&this.view.themeClasses!=this.classes&&(this.classes=this.container.className=this.view.themeClasses);o&&this.maybeMeasure()}createTooltip(t){let e=t.create(this.view);if(e.dom.classList.add("cm-tooltip"),t.arrow&&!e.dom.querySelector("cm-tooltip > cm-tooltip-arrow")){let t=document.createElement("div");t.className="cm-tooltip-arrow",e.dom.appendChild(t)}return e.dom.style.position=this.position,e.dom.style.top=Outside,this.container.appendChild(e.dom),e.mount&&e.mount(this.view),e}destroy(){var t,e;null===(t=this.view.dom.ownerDocument.defaultView)||void 0===t||t.removeEventListener("resize",this.measureSoon);for(let{dom:t}of this.manager.tooltipViews)t.remove();null===(e=this.intersectionObserver)||void 0===e||e.disconnect(),clearTimeout(this.measureTimeout)}readMeasure(){let t=this.view.dom.getBoundingClientRect();return{editor:t,parent:this.parent?this.container.getBoundingClientRect():t,pos:this.manager.tooltips.map(t=>this.view.coordsAtPos(t.pos)),size:this.manager.tooltipViews.map(({dom:t})=>t.getBoundingClientRect()),space:this.view.state.facet(tooltipConfig).tooltipSpace(this.view)}}writeMeasure(t){let{editor:e,space:o}=t,i=[];for(let s=0;s<this.manager.tooltips.length;s++){let r=this.manager.tooltips[s],n=this.manager.tooltipViews[s],{dom:l}=n,a=t.pos[s],h=t.size[s];if(!a||a.bottom<=Math.max(e.top,o.top)||a.top>=Math.min(e.bottom,o.bottom)||a.right<=Math.max(e.left,o.left)||a.left>=Math.min(e.right,o.right)){l.style.top=Outside;continue}let p=r.arrow?n.dom.querySelector(".cm-tooltip-arrow"):null,d=p?7:0,m=h.right-h.left,c=h.bottom-h.top,u=n.offset||noOffset,f=this.view.textDirection==Direction.LTR,v=h.width>o.right-o.left?f?o.left:o.right-h.width:f?Math.min(a.left-(p?14:0)+u.x,o.right-m):Math.max(o.left,a.left-m+(p?14:0)-u.x),w=!!r.above;!r.strictSide&&(w?a.top-(h.bottom-h.top)-u.y<o.top:a.bottom+(h.bottom-h.top)+u.y>o.bottom)&&w==o.bottom-a.bottom>a.top-o.top&&(w=!w);let g=w?a.top-c-d-u.y:a.bottom+d+u.y,b=v+m;for(let t of i)t.left<b&&t.right>v&&t.top<g+c&&t.bottom>g&&(g=w?t.top-c-2-d:t.bottom+d+2);"absolute"==this.position?(l.style.top=g-t.parent.top+"px",l.style.left=v-t.parent.left+"px"):(l.style.top=g+"px",l.style.left=v+"px"),p&&(p.style.left=a.left+(f?u.x:-u.x)-(v+14-7)+"px"),i.push({left:v,top:g,right:b,bottom:g+c}),l.classList.toggle("cm-tooltip-above",w),l.classList.toggle("cm-tooltip-below",!w),n.positioned&&n.positioned()}}maybeMeasure(){if(this.manager.tooltips.length&&(this.view.inView&&this.view.requestMeasure(this.measureReq),this.inView!=this.view.inView&&(this.inView=this.view.inView,!this.inView)))for(let t of this.manager.tooltipViews)t.dom.style.top=Outside}},{eventHandlers:{scroll(){this.maybeMeasure()}}}),baseTheme=EditorView.baseTheme({".cm-tooltip":{zIndex:100},"&light .cm-tooltip":{border:"1px solid #bbb",backgroundColor:"#f5f5f5"},"&light .cm-tooltip-section:not(:first-child)":{borderTop:"1px solid #bbb"},"&dark .cm-tooltip":{backgroundColor:"#333338",color:"white"},".cm-tooltip-arrow":{height:"7px",width:"14px",position:"absolute",zIndex:-1,overflow:"hidden","&:before, &:after":{content:"''",position:"absolute",width:0,height:0,borderLeft:"7px solid transparent",borderRight:"7px solid transparent"},".cm-tooltip-above &":{bottom:"-7px","&:before":{borderTop:"7px solid #bbb"},"&:after":{borderTop:"7px solid #f5f5f5",bottom:"1px"}},".cm-tooltip-below &":{top:"-7px","&:before":{borderBottom:"7px solid #bbb"},"&:after":{borderBottom:"7px solid #f5f5f5",top:"1px"}}},"&dark .cm-tooltip .cm-tooltip-arrow":{"&:before":{borderTopColor:"#333338",borderBottomColor:"#333338"},"&:after":{borderTopColor:"transparent",borderBottomColor:"transparent"}}}),noOffset={x:0,y:0},showTooltip=Facet.define({enables:[tooltipPlugin,baseTheme]}),showHoverTooltip=Facet.define();class HoverTooltipHost{constructor(t){this.view=t,this.mounted=!1,this.dom=document.createElement("div"),this.dom.classList.add("cm-tooltip-hover"),this.manager=new TooltipViewManager(t,showHoverTooltip,t=>this.createHostedView(t))}static create(t){return new HoverTooltipHost(t)}createHostedView(t){let e=t.create(this.view);return e.dom.classList.add("cm-tooltip-section"),this.dom.appendChild(e.dom),this.mounted&&e.mount&&e.mount(this.view),e}mount(t){for(let e of this.manager.tooltipViews)e.mount&&e.mount(t);this.mounted=!0}positioned(){for(let t of this.manager.tooltipViews)t.positioned&&t.positioned()}update(t){this.manager.update(t)}}const showHoverTooltipHost=showTooltip.compute([showHoverTooltip],t=>{let e=t.facet(showHoverTooltip).filter(t=>t);return 0===e.length?null:{pos:Math.min(...e.map(t=>t.pos)),end:Math.max(...e.filter(t=>null!=t.end).map(t=>t.end)),create:HoverTooltipHost.create,above:e[0].above,arrow:e.some(t=>t.arrow)}});class HoverPlugin{constructor(t,e,o,i,s){this.view=t,this.source=e,this.field=o,this.setHover=i,this.hoverTime=s,this.hoverTimeout=-1,this.restartTimeout=-1,this.pending=null,this.lastMove={x:0,y:0,target:t.dom,time:0},this.checkHover=this.checkHover.bind(this),t.dom.addEventListener("mouseleave",this.mouseleave=this.mouseleave.bind(this)),t.dom.addEventListener("mousemove",this.mousemove=this.mousemove.bind(this))}update(){this.pending&&(this.pending=null,clearTimeout(this.restartTimeout),this.restartTimeout=setTimeout(()=>this.startHover(),20))}get active(){return this.view.state.field(this.field)}checkHover(){if(this.hoverTimeout=-1,this.active)return;let t=Date.now()-this.lastMove.time;t<this.hoverTime?this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime-t):this.startHover()}startHover(){var t;clearTimeout(this.restartTimeout);let{lastMove:e}=this,o=this.view.contentDOM.contains(e.target)?this.view.posAtCoords(e):null;if(null==o)return;let i=this.view.coordsAtPos(o);if(null==i||e.y<i.top||e.y>i.bottom||e.x<i.left-this.view.defaultCharacterWidth||e.x>i.right+this.view.defaultCharacterWidth)return;let s=this.view.bidiSpans(this.view.state.doc.lineAt(o)).find(t=>t.from<=o&&t.to>=o),r=s&&s.dir==Direction.RTL?-1:1,n=this.source(this.view,o,e.x<i.left?-r:r);if(null===(t=n)||void 0===t?void 0:t.then){let t=this.pending={pos:o};n.then(e=>{this.pending==t&&(this.pending=null,e&&this.view.dispatch({effects:this.setHover.of(e)}))},t=>logException(this.view.state,t,"hover tooltip"))}else n&&this.view.dispatch({effects:this.setHover.of(n)})}mousemove(t){var e;this.lastMove={x:t.clientX,y:t.clientY,target:t.target,time:Date.now()},this.hoverTimeout<0&&(this.hoverTimeout=setTimeout(this.checkHover,this.hoverTime));let o=this.active;if(o&&!isInTooltip(this.lastMove.target)||this.pending){let{pos:i}=o||this.pending,s=null!==(e=null==o?void 0:o.end)&&void 0!==e?e:i;(i==s?this.view.posAtCoords(this.lastMove)==i:isOverRange(this.view,i,s,t.clientX,t.clientY,6))||(this.view.dispatch({effects:this.setHover.of(null)}),this.pending=null)}}mouseleave(){clearTimeout(this.hoverTimeout),this.hoverTimeout=-1,this.active&&this.view.dispatch({effects:this.setHover.of(null)})}destroy(){clearTimeout(this.hoverTimeout),this.view.dom.removeEventListener("mouseleave",this.mouseleave),this.view.dom.removeEventListener("mousemove",this.mousemove)}}function isInTooltip(t){for(let e=t;e;e=e.parentNode)if(1==e.nodeType&&e.classList.contains("cm-tooltip"))return!0;return!1}function isOverRange(t,e,o,i,s,r){let n=document.createRange(),l=t.domAtPos(e),a=t.domAtPos(o);n.setEnd(a.node,a.offset),n.setStart(l.node,l.offset);let h=n.getClientRects();n.detach();for(let t=0;t<h.length;t++){let e=h[t];if(Math.max(e.top-s,s-e.bottom,e.left-i,i-e.right)<=r)return!0}return!1}function hoverTooltip(t,e={}){let o=StateEffect.define(),i=StateField.define({create:()=>null,update(t,i){if(t&&e.hideOnChange&&(i.docChanged||i.selection))return null;for(let t of i.effects){if(t.is(o))return t.value;if(t.is(closeHoverTooltipEffect))return null}if(t&&i.docChanged){let e=i.changes.mapPos(t.pos,-1,MapMode.TrackDel);if(null==e)return null;let o=Object.assign(Object.create(null),t);return o.pos=e,null!=t.end&&(o.end=i.changes.mapPos(t.end)),o}return t},provide:t=>showHoverTooltip.from(t)}),s=e.hoverTime||600;return[i,ViewPlugin.define(e=>new HoverPlugin(e,t,i,o,s)),showHoverTooltipHost]}function getTooltip(t,e){let o=t.plugin(tooltipPlugin);if(!o)return null;let i=o.manager.tooltips.indexOf(e);return i<0?null:o.manager.tooltipViews[i]}function hasHoverTooltips(t){return t.facet(showHoverTooltip).some(t=>t)}const closeHoverTooltipEffect=StateEffect.define(),closeHoverTooltips=closeHoverTooltipEffect.of(null);function repositionTooltips(t){var e;null===(e=t.plugin(tooltipPlugin))||void 0===e||e.maybeMeasure()}export{closeHoverTooltips,getTooltip,hasHoverTooltips,hoverTooltip,repositionTooltips,showTooltip,tooltips};