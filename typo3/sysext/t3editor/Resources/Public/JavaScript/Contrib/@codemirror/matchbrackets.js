import{Facet,combineConfig,StateField}from"@codemirror/state";import{syntaxTree}from"@codemirror/language";import{EditorView,Decoration}from"@codemirror/view";import{NodeProp}from"@lezer/common";const baseTheme=EditorView.baseTheme({".cm-matchingBracket":{backgroundColor:"#328c8252"},".cm-nonmatchingBracket":{backgroundColor:"#bb555544"}}),DefaultScanDist=1e4,DefaultBrackets="()[]{}",bracketMatchingConfig=Facet.define({combine:e=>combineConfig(e,{afterCursor:!0,brackets:"()[]{}",maxScanDistance:1e4})}),matchingMark=Decoration.mark({class:"cm-matchingBracket"}),nonmatchingMark=Decoration.mark({class:"cm-nonmatchingBracket"}),bracketMatchingState=StateField.define({create:()=>Decoration.none,update(e,t){if(!t.docChanged&&!t.selection)return e;let r=[],a=t.state.facet(bracketMatchingConfig);for(let e of t.state.selection.ranges){if(!e.empty)continue;let n=matchBrackets(t.state,e.head,-1,a)||e.head>0&&matchBrackets(t.state,e.head-1,1,a)||a.afterCursor&&(matchBrackets(t.state,e.head,1,a)||e.head<t.state.doc.length&&matchBrackets(t.state,e.head+1,-1,a));if(!n)continue;let o=n.matched?matchingMark:nonmatchingMark;r.push(o.range(n.start.from,n.start.to)),n.end&&r.push(o.range(n.end.from,n.end.to))}return Decoration.set(r,!0)},provide:e=>EditorView.decorations.from(e)}),bracketMatchingUnique=[bracketMatchingState,baseTheme];function bracketMatching(e={}){return[bracketMatchingConfig.of(e),bracketMatchingUnique]}function matchingNodes(e,t,r){let a=e.prop(t<0?NodeProp.openedBy:NodeProp.closedBy);if(a)return a;if(1==e.name.length){let a=r.indexOf(e.name);if(a>-1&&a%2==(t<0?1:0))return[r[a+t]]}return null}function matchBrackets(e,t,r,a={}){let n=a.maxScanDistance||1e4,o=a.brackets||"()[]{}",c=syntaxTree(e),i=c.resolveInner(t,r);for(let a=i;a;a=a.parent){let n=matchingNodes(a.type,r,o);if(n&&a.from<a.to)return matchMarkedBrackets(e,t,r,a,n,o)}return matchPlainBrackets(e,t,r,c,i.type,n,o)}function matchMarkedBrackets(e,t,r,a,n,o){let c=a.parent,i={from:a.from,to:a.to},m=0,f=null==c?void 0:c.cursor;if(f&&(r<0?f.childBefore(a.from):f.childAfter(a.to)))do{if(r<0?f.to<=a.from:f.from>=a.to){if(0==m&&n.indexOf(f.type.name)>-1&&f.from<f.to)return{start:i,end:{from:f.from,to:f.to},matched:!0};if(matchingNodes(f.type,r,o))m++;else if(matchingNodes(f.type,-r,o)&&(m--,0==m))return{start:i,end:f.from==f.to?void 0:{from:f.from,to:f.to},matched:!1}}}while(r<0?f.prevSibling():f.nextSibling());return{start:i,matched:!1}}function matchPlainBrackets(e,t,r,a,n,o,c){let i=r<0?e.sliceDoc(t-1,t):e.sliceDoc(t,t+1),m=c.indexOf(i);if(m<0||m%2==0!=r>0)return null;let f={from:r<0?t-1:t,to:r>0?t+1:t},s=e.doc.iterRange(t,r>0?e.doc.length:0),d=0;for(let e=0;!s.next().done&&e<=o;){let o=s.value;r<0&&(e+=o.length);let i=t+e*r;for(let e=r>0?0:o.length-1,t=r>0?o.length:-1;e!=t;e+=r){let t=c.indexOf(o[e]);if(!(t<0||a.resolve(i+e,1).type!=n))if(t%2==0==r>0)d++;else{if(1==d)return{start:f,end:{from:i+e,to:i+e+1},matched:t>>1==m>>1};d--}}r>0&&(e+=o.length)}return s.done?{start:f,matched:!1}:null}export{bracketMatching,matchBrackets};